---

/* Código del lado del servidor o estático va aquí, como datos, importaciones o lógica de Astro */

---

<header class="h-16 w-full flex items-center sticky top-0 z-50 bg-white">
    <div class="w-full max-w-screen-container mx-auto flex justify-between relative">
        <div class="w-10 h-10">
            <img class="w-full h-full" src="/assets/icons/logo.png" alt="Dentist Example">
        </div>
        <nav class="flex gap-5 relative">
            <ul class="flex list-none m-0 p-0 relative z-20">
                <li class="py-2 hover:text-gray-500">
                    <a href="#inicio" class="nav-item px-4 py-2">
                        Inicio
                    </a>
                </li>
                <li class="py-2 hover:text-gray-500">
                    <a href="#nuestros-servicios" class="nav-item px-4 py-2">
                        Servicios
                    </a>
                </li>
                <li class="py-2 hover:text-gray-500">
                    <a href="#nosotros"  class="nav-item px-4 py-2">
                        Nosotros
                    </a>
                </li>
                <li class="py-2  hover:text-gray-500">
                    <a href="#contacto"  class="nav-item px-4 py-2">
                        Contacto
                    </a>
                </li>             
            </ul>
            <div class="lavalamp px-4 py-2 rounded-3xl bg-green-light absolute h-10 w-16 z-10"></div>
        </nav>
        <!-- <div class=""></div> -->
        
    </div>
</header>

<!-- Código del lado del cliente -->
<script>
import gsap from "gsap";

const navItems = document.querySelectorAll(".nav-item");
const lavalamp = document.querySelector(".lavalamp");

// Mueve la "lavalamp" hacia el ítem activo inicial (opcional)
const moveLavalamp = (element: any) => {
  const bounds = element.getBoundingClientRect();


  gsap.to(lavalamp, {
    width: bounds.width, // Ajusta el ancho
    x: bounds.left - (element.offsetParent.getBoundingClientRect().left), // Ajusta la posición horizontal
    ease: "power2.out", // Suavidad en el movimiento
    duration: 0.3
  });
};

// Asigna el evento de hover a cada ítem
navItems.forEach(item => {
  item.addEventListener("click", (e) => {
    e.preventDefault()
    // moveLavalamp(e.target);

      // Obtener el destino (el id de la sección a la que queremos desplazarnos)
      const targetId = item.getAttribute("href");
      const targetSection = document.querySelector(targetId || '') || '';

      // Animación suave al hacer scroll usando GSAP
      gsap.to(window, 
      
        {
            duration: 1,
            scrollTo: targetSection,
            ease: "power2",
        }
    );
  });
});



const sections = document.querySelectorAll('section');

  const observerOptions = {
    root: null, // Usa el viewport completo del navegador
    threshold: 0.3, // El 30% de la sección debe estar visible para que sea detectada
    rootMargin: '0px'
  };

  const observer = new IntersectionObserver((entries, observer) => {
    entries.forEach(entry => {

      if (entry.isIntersecting) {
        const index = entry.target.dataset['index']
        if (index) {
            console.log(`Llegaste a la sección: ${entry.target.id}`);
            // Puedes realizar cualquier acción aquí, como cambiar estilos de la navbar
            // Mueve la lavalamp al primer ítem al cargar la página
            moveLavalamp(navItems[Number(index-1)]);  // Opcional, para que empiece en el primer ítem
        }
        
      }
    });
  }, observerOptions);

  sections.forEach(section => {
    observer.observe(section); // Observa cada sección
  });


</script>
